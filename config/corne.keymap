/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

#define COLEMAK 0
#define QWERTY 1
#define NUMBERS 2
#define NAVIGATION 3
#define BRACKETS 4
#define DEBUG 5

/ {
    conditional_layers {
        compatible = "zmk,conditional-layers";
        tri_layer {
            if-layers = <2 3>;
            then-layer = <4>;
        };
    };
};

/ {
        keymap {
                compatible = "zmk,keymap";

                colemak {
                        bindings = <
&lt NAVIGATION TAB &kp Q &kp W &kp F &kp P &kp B &kp J &kp L &kp U &kp Y &kp SEMICOLON &lt NAVIGATION SINGLE_QUOTE
&mt LCTRL ESC &kp A &kp R &kp S &kp T &kp G &kp M &kp N &kp E &kp I &kp O &mt RIGHT_CONTROL RETURN
&mt LSHIFT GRAVE &kp Z &kp X &kp C &kp D &kp V &kp K &kp H &kp COMMA &kp DOT &kp FSLH &mt RIGHT_SHIFT CAPSLOCK
                  &mt LEFT_ALT LGUI &mo NAVIGATION &kp LSHIFT           &kp SPACE &lt NUMBERS BACKSPACE &kp LGUI
                        >;
                };

        qwerty {
            bindings = <
&trans &kp Q &kp W &kp E &kp R &kp T &kp Y &kp U &kp I &kp O &kp P &trans
&trans &kp A &kp S &kp D &kp F &kp G &kp H &kp J &kp K &kp L &kp SEMI &trans
&trans &kp Z &kp X &kp C &kp V &kp B &kp N &kp M &kp COMMA  &kp DOT &kp FSLH &trans
                          	        &trans     &trans       &trans      &trans  &trans   &trans
            >;
        };

                numbers {
                        bindings = <
&gresc &kp AMPERSAND &kp NUMBER_1 &kp NUMBER_2 &kp NUMBER_3 &trans &kp ASTERISK &kp MINUS &kp PLUS &kp UNDERSCORE &kp TILDE2 &trans
&trans &kp PIPE2 &kp NUMBER_4 &kp NUMBER_5 &kp NUMBER_6 &kp NUMBER_0 &kp NON_US_HASH &kp EXCLAMATION &kp AT_SIGN &kp EQUAL &kp QMARK &trans
&trans &kp CARET &kp NUMBER_7 &kp NUMBER_8 &kp NUMBER_9 &trans &kp PERCENT &kp DOUBLE_QUOTES &kp HASH &kp DOLLAR &kp NON_US_BACKSLASH &trans
                          	        &trans     &trans       &trans      &trans  &trans   &trans
                        >;
                };

                navigation {
                        bindings = <
&trans &kp C_MUTE &kp C_PLAY_PAUSE &mt C_PREV C_VOL_DN &mt C_NEXT C_VOL_UP &trans &kp PAGE_UP &kp HOME &kp UP_ARROW &kp END &kp DELETE &trans
&trans &kp LSHIFT &trans &kp LEFT_ALT &kp LCTRL &trans &kp PG_DN &kp LEFT_ARROW &kp DOWN_ARROW &kp RIGHT &kp BACKSPACE &trans
&trans &kp LC(Z) &kp LC(X) &kp LC(C) &kp LC(D) &kp LC(V) &trans &trans &trans &trans &trans &trans
                    	     &trans     &trans       &trans  &trans    &lt NUMBERS DELETE   &trans
                        >;
                };

        brackets {
            bindings = <
&trans &reset &kp F1 &kp F2 &kp F3 &kp F10 &trans &kp LEFT_PARENTHESIS &kp RIGHT_PARENTHESIS &trans &trans &trans
&trans &trans &kp F4 &kp F5 &kp F6 &kp F11 &trans &kp LEFT_BRACE &kp RIGHT_BRACE &trans &trans &trans
&trans &trans &kp F7 &kp F8 &kp F9 &kp F12 &trans &kp LEFT_BRACKET &kp RIGHT_BRACKET &trans &trans &trans
                    	     &trans     &trans       &trans      &trans  &trans   &trans
            >;
        };
        keyboard {
            bindings = <
&trans &reset &bootloader &trans &trans &trans &trans &trans &trans &trans &bt BT_CLR &trans
&trans &trans &trans &trans &trans &trans &trans &trans &trans &bt BT_PRV &bt BT_NXT &trans
&trans &trans &trans &trans &trans &trans &trans &trans &trans &trans &trans &trans
                    	     &trans     &trans       &trans      &trans  &trans   &trans
            >;
        };
    };
};
